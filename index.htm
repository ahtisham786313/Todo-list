<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #6ceeff8e;
            padding: 20px;
            overflow: hidden;
        }

        #todo-container {
            max-width: 600px;
            margin: 0 auto;
            background-color: #ffffff5b;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .todo-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
            word-wrap: break-word;
            overflow: hidden;
        }

        .todo-item input[type="text"] {
            flex-grow: 1;
            border: 1px solid #ddd;
            padding: 5px;
            margin-right: 10px;
            max-width: 100%;
        }

        .todo-buttons {
            display: flex;
            gap: 5px;
        }

        .todo-number {
            margin-right: 10px;
            color: #888;
            font-weight: bold;
            flex-shrink: 0;
        }

        .todo-text-container {
            flex-grow: 1;
            word-wrap: break-word;
            padding-right: 15px;
            text-align: left;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        /* Media Query for Responsive Layout */
        @media (max-width: 650px) {

            .todo-item,
            .complete-todo-item {
                flex-direction: column;
                align-items: flex-start;
            }

            .todo-number,
            .todo-text-container {
                flex-basis: auto;
            }

            .todo-number,
            .todo-text-container,
            .completed-todos-container {
                width: 100%;
            }

            .todo-buttons {
                margin-top: 10px;
            }
        }

        #completed-todos {
            margin-top: 20px;
        }

        #completed-todos h3 {
            margin-bottom: 10px;
        }

        .complete-todo-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
            word-wrap: break-word;
            overflow: hidden;
        }

        .complete-todo-item .todo-number {
            margin-right: 10px;
            color: #888;
            font-weight: bold;
            flex-shrink: 0;
        }

        .complete-todo-item .todo-text-container {
            flex-grow: 1;
            word-wrap: break-word;
            padding-right: 15px;
            text-align: left;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
</head>

<body>
    <div id="todo-container" class="card">
        <h2 class="card-header">To-Do List</h2>
        <div class="card-body">
            <div class="input-group mb-3">
                <input type="text" id="new-todo" class="form-control" placeholder="Add new task...">
                <div class="input-group-append">
                    <button class="btn btn-primary" onclick="addTodo()">Add</button>
                </div>
            </div>
            <div id="todo-list"></div>
        </div>

        <div id="completed-todos">
            <h3>Completed Todos</h3>
            <div id="completed-todo-list"></div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        let todos = JSON.parse(localStorage.getItem('todos')) || [];
        let completedTodos = JSON.parse(localStorage.getItem('completedTodos')) || [];

        function addTodo() {
            const todoInput = document.getElementById('new-todo');
            const todoText = todoInput.value.trim();
            if (todoText === "") {
                alert("You cannot add an empty task!");
                return;
            }

            const todo = {
                id: Date.now(),
                text: todoText,
                editing: false
            };
            todos.push(todo);
            todoInput.value = '';
            saveToLocalStorage();
            renderTodos();
        }
        function renderTodos() {
    const todoList = document.getElementById('todo-list');
    todoList.innerHTML = '';
    todos.forEach((todo, index) => {
        const todoItem = document.createElement('div');
        todoItem.className = 'todo-item';
        const timestamp = new Date(todo.id).toLocaleString();
        if (todo.editing) {
            todoItem.innerHTML = `
                <div class="todo-text-container">
                    <span class="todo-number">${index + 1}</span>
                    <input type="text" id="edit-${todo.id}" class="form-control" value="${todo.text}">
                </div>
                <div class="todo-buttons">
                    <button class="btn btn-success btn-sm" onclick="saveEdit(${todo.id})">Save</button>
                    <button class="btn btn-secondary btn-sm" onclick="cancelEdit(${todo.id})">Cancel</button>
                </div>
            `;
        } else {
            todoItem.innerHTML = `
                <div class="todo-text-container">
                    <span class="todo-number">${index + 1}</span>
                    <span class="todo-text">${todo.text}</span>
                </div>
                <div class="todo-buttons">
                    <button class="btn btn-warning btn-sm" onclick="editTodo(${todo.id})">Edit</button>
                    <button class="btn btn-danger btn-sm" onclick="deleteTodoConfirm(${todo.id})">Delete</button>
                    <button class="btn btn-success btn-sm" onclick="completeTodo(${todo.id})">Complete</button>
                    <button class="btn btn-info btn-sm" onclick="showDetails(${todo.id}, '${timestamp}')">Detail</button>
                </div>
            `;
        }
        todoList.appendChild(todoItem);
    });
}

        function editTodo(id) {
            todos = todos.map(todo => {
                if (todo.id === id) {
                    return { ...todo, editing: true };
                }
                return todo;
            });
            renderTodos();
        }

        function saveEdit(id) {
            const editInput = document.getElementById(`edit-${id}`);
            const newText = editInput.value.trim();
            if (newText === "") {
                alert("You cannot save an empty task!");
                return;
            }

            todos = todos.map(todo => {
                if (todo.id === id) {
                    return { ...todo, text: newText, editing: false };
                }
                return todo;
            });
            saveToLocalStorage();
            renderTodos();
        }

        function cancelEdit(id) {
            todos = todos.map(todo => {
                if (todo.id === id) {
                    return { ...todo, editing: false };
                }
                return todo;
            });
            renderTodos();
        }

        function deleteTodoConfirm(id) {
            const confirmDelete = confirm("Are you sure you want to delete this task?");
            if (confirmDelete) {
                deleteTodo(id);
            }
        }

        function deleteTodo(id) {
            todos = todos.filter(todo => todo.id !== id);
            saveToLocalStorage();
            renderTodos();
        }

        function completeTodo(id) {
            const todo = todos.find(todo => todo.id === id);
            if (todo) {
                completedTodos.push(todo);
                todos = todos.filter(todo => todo.id !== id);
                saveToLocalStorage();
                renderTodos();
                renderCompletedTodos();
            }
        }

        function uncompleteTodoConfirm(id) {
            const confirmUncomplete = confirm("Are you sure you want to mark this task as incomplete?");
            if (confirmUncomplete) {
                uncompleteTodo(id);
            }
        }

        function uncompleteTodo(id) {
            const completedTodo = completedTodos.find(todo => todo.id === id);
            if (completedTodo) {
                todos.push(completedTodo);
                completedTodos = completedTodos.filter(todo => todo.id !== id);
                saveToLocalStorage();
                renderTodos();
                renderCompletedTodos();
            }
        }

        function renderCompletedTodos() {
            const completedTodoList = document.getElementById('completed-todo-list');
            completedTodoList.innerHTML = '';
            completedTodos.forEach((todo, index) => {
                const completedTodoItem = document.createElement('div');
                completedTodoItem.className = 'complete-todo-item';
                const timestamp = new Date(todo.id).toLocaleString();
                completedTodoItem.innerHTML = `
            <div class="todo-text-container">
                <span class="todo-number">${index + 1}</span>
                <span class="todo-text">${todo.text}</span>
            </div>
            <div class="todo-buttons">
                <button class="btn btn-danger btn-sm" onclick="deleteCompletedTodoConfirm(${todo.id})">Delete</button>
                <button class="btn btn-warning btn-sm" onclick="uncompleteTodoConfirm(${todo.id})">Uncomplete</button>
                <button class="btn btn-info btn-sm" onclick="showDetails(${todo.id}, '${timestamp}')">Detail</button>
            </div>
        `;
                completedTodoList.appendChild(completedTodoItem);
            });
        }
        function showDetails(id, timestamp) {
            const todo = todos.find(todo => todo.id === id) || completedTodos.find(todo => todo.id === id);
            if (todo) {
                alert(`Todo: ${todo.text}\nDate and Time Added: ${timestamp}`);
            }
        }
        function deleteCompletedTodoConfirm(id) {
            const confirmDelete = confirm("Are you sure you want to delete this completed task?");
            if (confirmDelete) {
                deleteCompletedTodo(id);
            }
        }

        function deleteCompletedTodo(id) {
            completedTodos = completedTodos.filter(todo => todo.id !== id);
            saveToLocalStorage();
            renderCompletedTodos();
        }

        function saveToLocalStorage() {
            localStorage.setItem('todos', JSON.stringify(todos));
            localStorage.setItem('completedTodos', JSON.stringify(completedTodos));
        }

        // Initial rendering
        renderTodos();
        renderCompletedTodos();
    </script>
</body>

</html>